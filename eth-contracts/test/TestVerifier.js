// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('Verifier')
const { proof, inputs } = require('../../zokrates/code/square/proof.json')

// - use the contents from proof.json generated from zokrates steps
contract('Verifier', accounts => {
    beforeEach(async () => {
        this.contract = await Verifier.new({ from: accounts[0] })
      }) 
// Test verification with correct proof
it('VerifyTx returns proof', async () => {
    const result = await this.contract.verifyTx.call(
        proof.a,
        proof.b,
        proof.c,
        inputs
    )
  console.log(`Result is:  ${result}`)
  assert(result)
  })

  // Test verification with incorrect proof
  it('Fails with incorrect proof', async () => {

  const wrongInputs =["0x0000000000000000000000000000000000000000000000000000000000000003", "0x0000000000000000000000000000000000000000000000000000000000000007"]

    const result = await this.contract.verifyTx.call(
        proof.a,
        proof.b,
        proof.c,
     wrongInputs
    )
    console.log(`Result is:  ${result}`)
    assert(!result, 'The proof false')
  })


})